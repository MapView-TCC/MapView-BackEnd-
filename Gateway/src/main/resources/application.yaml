server:
  port: 8000
spring:
  application:
    name: Gateway

  # Configuração do cliente OAuth2 para se registrar com o provedor de identidade Azure.

  security:
    oauth2:
      client:
        registration:
          azure:
            client-id: a02aa40a-f271-4ad7-8439-18b3cba4af94
            client-secret: CnS8Q~2WbfXrqPcWMJNwfZZaNcjRieYvkZY44bqm
            scope: openid,profile,email

            redirect-uri: http://localhost:5173/callback # Necessário ser a mesma cadastrada na Azure
            provider: azure

        # Configuração do provedor de identidade Azure.

        provider:
          azure:
            issuer-uri: https://login.microsoftonline.com/0ae51e19-07c8-4e4b-bb6d-648ee58410f4/v2.0 # Mesmo presente no Secured-Service
            authorization-uri: https://login.microsoftonline.com/0ae51e19-07c8-4e4b-bb6d-648ee58410f4/oauth2/v2.0/authorize
            token-uri: https://login.microsoftonline.com/0ae51e19-07c8-4e4b-bb6d-648ee58410f4/oauth2/v2.0/token
            jwk-set-uri: https://login.microsoftonline.com/0ae51e19-07c8-4e4b-bb6d-648ee58410f4/discovery/v2.0/keys
            logout: https://login.microsoftonline.com/0ae51e19-07c8-4e4b-bb6d-648ee58410f4/oauth2/v2.0/logout
  cloud:
    gateway:

      # Define as rotas do gateway.

      routes:
        - id: resource
          uri: http://localhost:9000 # URI para onde a requisição será roteada (URI do Secured-Service)
          predicates: # A rota será usada para requisições com o caminho /resource.
            - Path=/resource

          # Filtros aplicados às requisições que passam pela rota.

          filters:
            - name: TokenRelay # Um filtro que repassa o token OAuth2 para o serviço de backend.

            # Adiciona cabeçalhos de resposta para permitir CORS

            - AddResponseHeader=Access-Control-Allow-Origin, http://localhost:5173
            - AddResponseHeader=Access-Control-Allow-Methods, GET, POST, PUT, DELETE, OPTIONS
            - AddResponseHeader=Access-Control-Allow-Headers, Authorization, Content-Type

# Logs mais detalhados para acompanhar o processo pelo terminal!

logging:
  level:
    org.springframework.security: DEBUG
    org.springframework.cloud.gateway.filter.factory.TokenRelayGatewayFilterFactory: DEBUG
    org.springframework.cloud.gateway: DEBUG
    org.springframework.security.oauth2: DEBUG